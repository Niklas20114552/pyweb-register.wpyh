def is_ip_address(address):
    ip_pattern = re.compile(
        r"^(\d{1,3}\.){3}\d{1,3}$|"
        r"^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$|"
        r"^([0-9a-fA-F]{1,4}:){1,7}:$|"
        r"^:(:[0-9a-fA-F]{1,4}){1,7}$|"
        r"^([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}$|"
        r"^([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}$|"
        r"^([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}$|"
        r"^([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}$|"
        r"^([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}$|"
        r"^[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})$|"
        r"^:((:[0-9a-fA-F]{1,4}){1,7}|:)$|"
        r"^fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}$|"
       r"::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]|)[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]|)[0-9])$|"
        r"([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]|)[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]|)[0-9])$"
    )
    if ip_pattern.match(address):
        if "." in address:
            return all(0 <= int(octet) <= 255 for octet in address.split("."))
        return True
    return False

def is_hostname(hostname):
    pattern = re.compile(r'(?i)^(?:([a-z0-9-]+|\*)\.)?([a-z0-9-]{1,61})\.([a-z0-9]{2,7})$')
    return bool(re.match(pattern, hostname))


rsubmit = getId('register')
rdomain = getId('rdomain')
rip = getId('rip')
rkey = getId('rkey')
rreturn = getId('rreturn')

dsubmit = getId('delete')
ddomain = getId('ddomain')
dkey = getId('dkey')
dreturn = getId('dreturn')

usubmit = getId('update')
udomain = getId('udomain')
uip = getId('uip')
ukey = getId('ukey')
ureturn = getId('ureturn')

@rdomain(event='textChanged')
@rip(event='textChanged')
@rkey(event='textChanged')
def updateRButtonState():
    rsubmit.setDisabled(not (rdomain.text() and rip.text() and rkey.text()))

@ddomain(event='textChanged')
@dkey(event='textChanged')
def updateDButtonState():
    dsubmit.setDisabled(not (ddomain.text() and dkey.text()))

@udomain(event='textChanged')
@uip(event='textChanged')
@ukey(event='textChanged')
def updateUButtonState():
    usubmit.setDisabled(not (udomain.text() and uip.text() and ukey.text()))

@rsubmit(event='clicked')
def register():
    rreturn.setText('')
    if not is_hostname(rdomain.text()):
        warning('Register: Malformed Domain')
        rreturn.setText('Failed: The domain name is malformed!')
        return

    if not is_ip_address(rip.text()):
        warning('Register: Malformed IP-Address')
        rreturn.setText('Failed: The IP-address is malformed!')
        return

    key = hashlib.sha256(rkey.text().encode()).hexdigest()

    response = requests.post('https://gnuhobbyhub.de:8952', json={'domain': rdomain.text(), 'ip': rip.text(), 'secret_key': key})
    if response.status_code == 200:
        rreturn.setText('Success')
    else:
        rreturn.setText('Failed: ' + response.text)

@dsubmit(event='clicked')
def delete():
    dreturn.setText('')
    if not is_hostname(ddomain.text()):
        warning('Delete: Malformed Domain')
        dreturn.setText('Failed: The domain name is malformed!')
        return

    key = hashlib.sha256(dkey.text().encode()).hexdigest()

    response = requests.delete('https://gnuhobbyhub.de:8952', json={'domain': ddomain.text(), 'secret_key': key})
    if response.status_code == 200:
        dreturn.setText('Success')
    else:
        dreturn.setText('Failed: ' + response.text)

@usubmit(event='clicked')
def update():
    ureturn.setText('')
    if not is_hostname(udomain.text()):
        warning('Update: Malformed Domain')
        ureturn.setText('Failed: The domain name is malformed!')
        return

    if not is_ip_address(uip.text()):
        warning('Update: Malformed IP-Address')
        ureturn.setText('Failed: The IP-address is malformed!')
        return

    key = hashlib.sha256(ukey.text().encode()).hexdigest()

    response = requests.put('https://gnuhobbyhub.de:8952', json={'domain': udomain.text(), 'ip': uip.text(), 'secret_key': key})
    if response.status_code == 200:
        ureturn.setText('Success')
    else:
        ureturn.setText('Failed: ' + response.text)
